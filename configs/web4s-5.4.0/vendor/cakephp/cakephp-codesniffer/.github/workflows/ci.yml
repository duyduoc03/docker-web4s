name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.4']
        dependencies: [highest]
        include:
          - php-version: '7.2'
            dependencies: 'lowest'
          - php-version: '8.0'
            composer-options: "--ignore-platform-reqs"

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl
        coverage: pcov

    - name: Composer install
      uses: ramsey/composer-install@v3
      with:
        dependency-versions: ${{ matrix.dependencies }}
        composer-options: "${{ matrix.composer-options }}"

    - name: Setup problem matchers for PHPUnit
      if: matrix.php-version == '7.4'
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Run PHPUnit
      run: |
        vendor/bin/phpcs --config-set installed_paths $(pwd)
        vendor/bin/phpunit --filter CakePHP

    - name: Submit code coverage
      if: matrix.php-version == '7.4'
      uses: codecov/codecov-action@v1

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'
        extensions: mbstring, intl
        tools: cs2pr
        coverage: none

    - name: Composer install
      uses: ramsey/composer-install@v3

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --report=checkstyle CakePHP/ | cs2pr
